{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hackthon\\\\Masai Hackthon\\\\Anveshan Hackathon 2025\\\\Life-In-Weeks Timeline App\\\\life-in-weeks\\\\life-in-weeks\\\\frontend\\\\src\\\\components\\\\Timeline.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport Week from './Week';\nimport EventForm from './EventForm';\nimport { getTimeline, createEvent } from '../services/api'; // Import getTimeline and createEvent\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timeline() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [timeline, setTimeline] = useState([]);\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Define setError\n\n  useEffect(() => {\n    if (currentUser) {\n      loadTimeline();\n    }\n  }, [currentUser]);\n  const loadTimeline = async () => {\n    try {\n      console.log(\"Loading timeline...\");\n      const response = await getTimeline(); // Now defined\n      console.log(\"Timeline response:\", response);\n      const data = response.data;\n      console.log(\"Timeline data:\", data);\n\n      // Convert date strings to Date objects\n      const timelineWithDates = data.weeks.map(week => ({\n        ...week,\n        start_date: new Date(week.start_date),\n        end_date: new Date(week.end_date),\n        events: week.events.map(event => ({\n          ...event,\n          date: new Date(event.date)\n        }))\n      }));\n      setTimeline(timelineWithDates);\n      setLoading(false);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Failed to load timeline\", error);\n      console.error(\"Error details:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setError(\"Failed to load timeline. See console for details.\"); // Now defined\n      setLoading(false);\n    }\n  };\n  const handleWeekClick = week => {\n    setSelectedWeek(week);\n    setShowEventForm(true);\n  };\n  const handleAddEvent = async eventData => {\n    try {\n      console.log(\"Adding event:\", eventData);\n      console.log(\"Selected week:\", selectedWeek);\n      const response = await createEvent({\n        ...eventData,\n        date: selectedWeek.start_date.toISOString().split('T')[0]\n      });\n      console.log(\"Event creation response:\", response);\n      loadTimeline();\n      setShowEventForm(false);\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Failed to add event\", error);\n      console.error(\"Error details:\", (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading timeline...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Group weeks by year\n  const years = {};\n  timeline.forEach(week => {\n    const year = week.start_date.getFullYear();\n    if (!years[year]) years[year] = [];\n    years[year].push(week);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"years-grid\",\n      children: Object.entries(years).map(([year, weeks]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-label\",\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weeks-container\",\n          children: weeks.map(week => /*#__PURE__*/_jsxDEV(Week, {\n            week: week,\n            onClick: () => handleWeekClick(week)\n          }, week.week_number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), showEventForm && selectedWeek && /*#__PURE__*/_jsxDEV(EventForm, {\n      week: selectedWeek,\n      onSubmit: handleAddEvent,\n      onCancel: () => setShowEventForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Timeline, \"0DzWyU0Dsdbw0xbsxnL+cYOFVEc=\", false, function () {\n  return [useAuth];\n});\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Week","EventForm","getTimeline","createEvent","jsxDEV","_jsxDEV","Timeline","_s","currentUser","timeline","setTimeline","selectedWeek","setSelectedWeek","showEventForm","setShowEventForm","loading","setLoading","error","setError","loadTimeline","console","log","response","data","timelineWithDates","weeks","map","week","start_date","Date","end_date","events","event","date","_error$response","handleWeekClick","handleAddEvent","eventData","toISOString","split","_error$response2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","years","forEach","year","getFullYear","push","Object","entries","onClick","week_number","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["E:/Hackthon/Masai Hackthon/Anveshan Hackathon 2025/Life-In-Weeks Timeline App/life-in-weeks/life-in-weeks/frontend/src/components/Timeline.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Week from './Week';\r\nimport EventForm from './EventForm';\r\nimport { getTimeline, createEvent } from '../services/api'; // Import getTimeline and createEvent\r\n\r\nexport default function Timeline() {\r\n  const { currentUser } = useAuth();\r\n  const [timeline, setTimeline] = useState([]);\r\n  const [selectedWeek, setSelectedWeek] = useState(null);\r\n  const [showEventForm, setShowEventForm] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // Define setError\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      loadTimeline();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const loadTimeline = async () => {\r\n    try {\r\n      console.log(\"Loading timeline...\");\r\n      const response = await getTimeline(); // Now defined\r\n      console.log(\"Timeline response:\", response);\r\n      \r\n      const data = response.data;\r\n      console.log(\"Timeline data:\", data);\r\n      \r\n      // Convert date strings to Date objects\r\n      const timelineWithDates = data.weeks.map(week => ({\r\n        ...week,\r\n        start_date: new Date(week.start_date),\r\n        end_date: new Date(week.end_date),\r\n        events: week.events.map(event => ({\r\n          ...event,\r\n          date: new Date(event.date)\r\n        }))\r\n      }));\r\n      \r\n      setTimeline(timelineWithDates);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to load timeline\", error);\r\n      console.error(\"Error details:\", error.response?.data);\r\n      setError(\"Failed to load timeline. See console for details.\"); // Now defined\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWeekClick = (week) => {\r\n    setSelectedWeek(week);\r\n    setShowEventForm(true);\r\n  };\r\n\r\n  const handleAddEvent = async (eventData) => {\r\n  try {\r\n    console.log(\"Adding event:\", eventData);\r\n    console.log(\"Selected week:\", selectedWeek);\r\n    \r\n    const response = await createEvent({\r\n      ...eventData,\r\n      date: selectedWeek.start_date.toISOString().split('T')[0]\r\n    });\r\n    \r\n    console.log(\"Event creation response:\", response);\r\n    loadTimeline();\r\n    setShowEventForm(false);\r\n  } catch (error) {\r\n    console.error(\"Failed to add event\", error);\r\n    console.error(\"Error details:\", error.response?.data);\r\n  }\r\n};\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading timeline...</div>;\r\n  }\r\n\r\n  // Group weeks by year\r\n  const years = {};\r\n  timeline.forEach(week => {\r\n    const year = week.start_date.getFullYear();\r\n    if (!years[year]) years[year] = [];\r\n    years[year].push(week);\r\n  });\r\n\r\n  return (\r\n    <div className=\"timeline-container\">\r\n      <div className=\"years-grid\">\r\n        {Object.entries(years).map(([year, weeks]) => (\r\n          <div key={year} className=\"year-row\">\r\n            <div className=\"year-label\">{year}</div>\r\n            <div className=\"weeks-container\">\r\n              {weeks.map(week => (\r\n                <Week \r\n                  key={week.week_number} \r\n                  week={week} \r\n                  onClick={() => handleWeekClick(week)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {showEventForm && selectedWeek && (\r\n        <EventForm \r\n          week={selectedWeek}\r\n          onSubmit={handleAddEvent}\r\n          onCancel={() => setShowEventForm(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}